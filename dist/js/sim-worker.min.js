importScripts("./data/buffs.min.js","./data/gear.min.js","./data/races.min.js","./data/spells.min.js","./data/talents.min.js","./classes/player.min.js","./classes/simulation.min.js","./classes/spell.min.js","./classes/weapon.min.js","./globals.min.js","./WarriorSim.min.js"),onmessage=(e=>{const a=e.data;updateGlobals(a.globals),fetch("./WarriorSim.wasm").then(e=>e.arrayBuffer()).then(e=>WarriorSim({wasmBinary:e}).ready).then(e=>{const t=["head","neck","shoulder","back","chest","wrist","hands","waist","legs","feet","finger1","finger2","trinket1","trinket2","ranged","mainhand","offhand","twohand","custom"],r=[...Array(8)].map(()=>Math.floor(65536*Math.random()));e._initRandom(...r);for(let t of a.globals.buffs)e._enableBuff(t,1);for(let r in a.globals.enchant){const s=t.indexOf(r);for(let t of a.globals.enchant[r])t.selected&&e._enableEnchant(s,t.id,1)}for(let r in a.globals.gear){const s=t.indexOf(r);for(let t of a.globals.gear[r])t.selected&&e._enableItem(s,t.id,1)}function s(t,...r){const s=a.globals.rotation[t],n=e._spellOptions(s.id)>>2;e.HEAP32[n]=s.active?1:0,r.forEach((a,t)=>e.HEAP32[n+t+1]=s[a])}s(0,"minrage","reaction"),s(1,"minrage","maincd","reaction"),s(2,"minrage","maincd","reaction","priorityap"),s(3,"minrage","reaction"),s(4,"reaction");const n=e._allocConfig(),l=n>>2;e.HEAP32[l+0]=null!=a.player[0]?a.player[0]:-1,e.HEAP32[l+1]=null!=a.player[1]?"string"==typeof a.player[1]?t.indexOf(a.player[1]):a.player[1]:-1,e.HEAP32[l+2]=null!=a.player[2]?a.player[2]:-1,e.HEAP32[l+3]=["Night Elf","Tauren"].indexOf(a.player[3].race),e.HEAP32[l+5]=a.player[3].weaponrng?1:0,e.HEAP32[l+6]=a.player[3].spelldamage,e.HEAP32[l+7]=a.player[3].target.level,e.HEAP32[l+8]=a.player[3].target.basearmor,e.HEAP32[l+9]=a.player[3].target.armor,e.HEAP32[l+10]=a.player[3].target.defense,e.HEAP32[l+11]=a.player[3].target.binaryresist,e.HEAPF64[l+12>>1]=a.player[3].target.mitigation,e.HEAP32[l+14]=a.sim.timesecsmin,e.HEAP32[l+15]=a.sim.timesecsmax,e.HEAP32[l+16]=a.sim.executeperc,e.HEAP32[l+17]=a.sim.startrage,e.HEAP32[l+18]=a.sim.iterations,e.HEAP32[l+19]=a.sim.batching;const i=e._allocTalents();for(let a of talents)for(let t of a.t)t.c&&e._setTalent(i,t.i,t.c);const o=e._allocSimulation(n,i);e._runSimulation(o),e._reportSimulation(o,a.fullReport?1:0),e._freeSimulation(o),e._freeTalents(i),e._freeConfig(n)},e=>{console.error(e);const t=new Player(...a.player),r=new Simulation(t,e=>{a.fullReport&&(e.player=t.serializeStats(),e.spread=r.spread),postMessage([TYPE.FINISHED,e])},(e,a)=>{postMessage([TYPE.UPDATE,e,a])},a.sim);r.startSync()}).catch(e=>{postMessage([TYPE.ERROR,e])})});