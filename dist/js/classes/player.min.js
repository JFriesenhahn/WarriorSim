class Player{static getConfig(t){return{race:$('select[name="race"]').val(),weaponrng:"Yes"==$('select[name="weaponrng"]').val(),spelldamage:parseInt($('input[name="spelldamage"]').val()),target:{level:parseInt($('input[name="targetlevel"]').val()),basearmor:parseInt($('input[name="targetarmor"]').val()),armor:parseInt($('input[name="targetarmor"]').val()),defense:5*parseInt($('input[name="targetlevel"]').val()),mitigation:1-parseInt($('input[name="targetresistance"]').val())/6e3*15,binaryresist:parseInt(1e4-8300*(1-.15*parseInt($('input[name="targetresistance"]').val())/60))}}}constructor(t,s,a,e){e||(e=Player.getConfig()),this.rage=0,this.level=60,this.timer=0,this.itemtimer=0,this.dodgetimer=0,this.extraattacks=0,this.batchedextras=0,this.nextswinghs=!1,this.nextswingcl=!1,this.race=e.race,this.weaponrng=e.weaponrng,this.spelldamage=e.spelldamage,this.target=e.target,this.base={ap:0,agi:0,str:0,hit:0,crit:0,spellcrit:0,skill_0:5*this.level,skill_1:5*this.level,skill_2:5*this.level,skill_3:5*this.level,skill_4:5*this.level,skill_5:5*this.level,haste:1,strmod:1,agimod:1,dmgmod:1,apmod:1},1==a?(this.testEnch=t,this.testEnchType=s):2==a?(this.testTempEnch=t,this.testTempEnchType=s):3==a?0==s?this.base.ap+=t:1==s?this.base.crit+=t:2==s?this.base.hit+=t:3==s&&(this.base.str+=t):(this.testItem=t,this.testItemType=s),this.stats={},this.auras={},this.spells={},this.items=[],this.addRace(),this.addTalents(),this.addGear(),this.mh&&(this.addSets(),this.addEnchants(),this.addTempEnchants(),this.addBuffs(),this.addSpells(),this.items.includes(9449)&&(this.auras.pummeler=new Pummeler(this)),this.items.includes(23041)&&(this.auras.slayer=new Slayer(this)),this.items.includes(22954)&&(this.auras.spider=new Spider(this)),this.items.includes(21180)&&(this.auras.bloodlustbrooch=new BloodlustBrooch(this)),this.items.includes(21670)&&(this.auras.swarmguard=new Swarmguard(this)),this.update())}addRace(){for(let t of races)t.name==this.race&&(this.base.aprace=t.ap,this.base.ap+=t.ap,this.base.str+=t.str,this.base.agi+=t.agi,this.base.skill_0+=t.skill_0,this.base.skill_1+=t.skill_1,this.base.skill_2+=t.skill_2,this.base.skill_3+=t.skill_3)}addTalents(){this.talents={};for(let t in talents)for(let s of talents[t].t)this.talents=Object.assign(this.talents,s.aura(s.c))}addGear(){for(let type in gear)for(let item of gear[type])if(this.testItemType==type&&this.testItem==item.id||this.testItemType!=type&&item.selected){for(let t in this.base)this.base[t]+=item[t]||0;if(item.skill&&item.skill>0)if("Varied"==item.type)this.base.skill_1+=item.skill,this.base.skill_2+=item.skill,this.base.skill_3+=item.skill;else{let t=WEAPONTYPE[item.type.toUpperCase()];this.base["skill_"+t]+=item.skill}if("mainhand"!=type&&"offhand"!=type&&"twohand"!=type||this.addWeapon(item,type),item.procchance&&("trinket1"==type||"trinket2"==type)){let proc={};proc.chance=100*item.procchance,proc.extra=item.procextra,proc.magicdmg=item.magicdmg,item.procspell&&(this.auras[item.procspell.toLowerCase()]=eval("new "+item.procspell+"(this)"),proc.spell=this.auras[item.procspell.toLowerCase()]),this["trinketproc"+(this.trinketproc1?2:1)]=proc}this.items.push(item.id)}if(this.mh&&this.mh.twohand)for(let t in gear)for(let s of gear[t])if(("hands"==t||"head"==t)&&(this.testItemType==t&&this.testItem==s.id||this.testItemType!=t&&s.selected)&&s.skill&&s.skill>0)if("Varied"==s.type)this.base.skill_1-=s.skill,this.base.skill_2-=s.skill,this.base.skill_3-=s.skill;else{let t=WEAPONTYPE[s.type.toUpperCase()];this.base["skill_"+t]-=s.skill}}addWeapon(t,s){let a,e;for(let t of enchant[s])t.temp||(this.testEnchType==s&&this.testEnch==t.id?a=t:this.testEnchType!=s&&t.selected&&(a=t));for(let t of enchant[s])t.temp&&(this.testTempEnchType==s&&this.testTempEnch==t.id?e=t:this.testTempEnchType!=s&&t.selected&&(e=t));"mainhand"==s&&(this.mh=new Weapon(this,t,a,e,!1,!1)),"twohand"==s&&(this.mh=new Weapon(this,t,a,e,!1,!0))}addEnchants(){for(let t in enchant)for(let s of enchant[t])if(!s.temp&&(this.testEnchType==t&&this.testEnch==s.id||this.testEnchType!=t&&s.selected))for(let t in this.base)"haste"==t?this.base.haste*=1+s.haste/100||1:this.base[t]+=s[t]||0}addTempEnchants(){for(let t in enchant)for(let s of enchant[t])if(s.temp&&(this.testTempEnchType==t&&this.testTempEnch==s.id||this.testTempEnchType!=t&&s.selected))for(let t in this.base)"haste"==t?this.base.haste*=1+s.haste/100||1:this.base[t]+=s[t]||0}addSets(){for(let set of sets){let counter=0;for(let t of set.items)this.items.includes(t)&&counter++;if(0!=counter)for(let bonus of set.bonus)if(counter>=bonus.count){for(let t in bonus.stats)this.base[t]+=bonus.stats[t]||0;bonus.stats.procspell&&(this.attackproc={},this.attackproc.chance=100*bonus.stats.procchance,this.auras[bonus.stats.procspell.toLowerCase()]=eval("new "+bonus.stats.procspell+"(this)"),this.attackproc.spell=this.auras[bonus.stats.procspell.toLowerCase()]),bonus.stats.enhancedbs&&(this.enhancedbs=!0)}}}addBuffs(){for(let t of buffs)if(t.active){let s=0;if("battleshout"==t.group){let a=t.ap;27578==t.id&&this.enhancedbs&&(a+=30),s=(a=~~(a*(1+this.talents.impbattleshout)))-t.ap}"zerkstance"==t.group&&(this.zerkstance=!0),"vaelbuff"==t.group&&(this.vaelbuff=!0),"dragonbreath"==t.group&&(this.dragonbreath=!0),this.base.ap+=(t.ap||0)+s,this.base.agi+=t.agi||0,this.base.str+=t.str||0,this.base.crit+=t.crit||0,this.base.hit+=t.hit||0,this.base.spellcrit+=t.spellcrit||0,this.base.agimod*=1+t.agimod/100||1,this.base.strmod*=1+t.strmod/100||1,this.base.dmgmod*=1+t.dmgmod/100||1,this.base.haste*=1+t.haste/100||1}}addSpells(){for(let spell of spells)spell.active&&(spell.aura?this.auras[spell.classname.toLowerCase()]=eval(`new ${spell.classname}(this)`):this.spells[spell.classname.toLowerCase()]=eval(`new ${spell.classname}(this)`))}reset(t){this.rage=t,this.timer=0,this.itemtimer=0,this.dodgetimer=0,this.spelldelay=0,this.heroicdelay=0,this.mh.timer=0,this.oh&&(this.oh.timer=Math.round(1e3*this.oh.speed/this.stats.haste/2)),this.extraattacks=0,this.batchedextras=0,this.nextswinghs=!1,this.nextswingcl=!1;for(let t in this.spells)this.spells[t].timer=0,this.spells[t].stacks=0;for(let t in this.auras)this.auras[t].timer=0,this.auras[t].firstuse=!0,this.auras[t].stacks=0;this.auras.deepwounds&&(this.auras.deepwounds.idmg=0),this.update()}update(){this.updateAuras(),this.updateArmorReduction(),this.mh.glanceChance=this.getGlanceChance(this.mh),this.mh.miss=this.getMissChance(this.mh),this.mh.dwmiss=this.mh.miss,this.mh.dodge=this.getDodgeChance(this.mh),this.oh&&(this.mh.dwmiss=this.getDWMissChance(this.mh),this.oh.glanceChance=this.getGlanceChance(this.oh),this.oh.miss=this.getMissChance(this.oh),this.oh.dwmiss=this.getDWMissChance(this.oh),this.oh.dodge=this.getDodgeChance(this.oh))}updateAuras(){for(let t in this.base)this.stats[t]=this.base[t];for(let t in this.auras)if(this.auras[t].timer){for(let s in this.auras[t].stats)this.stats[s]+=this.auras[t].stats[s];for(let s in this.auras[t].mult_stats)this.stats[s]*=1+this.auras[t].mult_stats[s]/100}this.stats.str=~~(this.stats.str*this.stats.strmod),this.stats.agi=~~(this.stats.agi*this.stats.agimod),this.stats.ap+=2*this.stats.str,this.stats.crit+=this.stats.agi/20,this.crit=this.getCritChance(),1!=this.stats.apmod&&(this.stats.ap+=~~((this.base.aprace+2*this.stats.str)*(this.stats.apmod-1)))}updateStrength(){this.stats.str=this.base.str,this.stats.ap=this.base.ap;for(let t in this.auras)this.auras[t].timer&&(this.auras[t].stats.str&&(this.stats.str+=this.auras[t].stats.str),this.auras[t].stats.ap&&(this.stats.ap+=this.auras[t].stats.ap));this.stats.str=~~(this.stats.str*this.stats.strmod),this.stats.ap+=2*this.stats.str,1!=this.stats.apmod&&(this.stats.ap+=~~((this.base.aprace+2*this.stats.str)*(this.stats.apmod-1)))}updateAP(){this.stats.ap=this.base.ap;for(let t in this.auras)this.auras[t].timer&&this.auras[t].stats.ap&&(this.stats.ap+=this.auras[t].stats.ap);this.stats.ap+=2*this.stats.str,1!=this.stats.apmod&&(this.stats.ap+=~~((this.base.aprace+2*this.stats.str)*(this.stats.apmod-1)))}updateHaste(){this.stats.haste=this.base.haste,this.auras.pummeler&&this.auras.pummeler.timer&&(this.stats.haste*=1+this.auras.pummeler.mult_stats.haste/100),this.auras.spider&&this.auras.spider.timer&&(this.stats.haste*=1+this.auras.spider.mult_stats.haste/100)}updateBonusDmg(){let t=0;this.auras.zeal&&this.auras.zeal.timer&&(t+=this.auras.zeal.stats.bonusdmg),this.auras.zandalarian&&this.auras.zandalarian.timer&&(t+=this.auras.zandalarian.stats.bonusdmg),this.mh.bonusdmg=this.mh.basebonusdmg+t,this.oh&&(this.oh.bonusdmg=this.oh.basebonusdmg+t)}updateArmorReduction(){this.target.armor=this.target.basearmor,this.auras.annihilator&&this.auras.annihilator.timer&&(this.target.armor=Math.max(this.target.armor-this.auras.annihilator.stacks*this.auras.annihilator.armor,0)),this.auras.rivenspike&&this.auras.rivenspike.timer&&(this.target.armor=Math.max(this.target.armor-this.auras.rivenspike.stacks*this.auras.rivenspike.armor,0)),this.auras.bonereaver&&this.auras.bonereaver.timer&&(this.target.armor=Math.max(this.target.armor-this.auras.bonereaver.stacks*this.auras.bonereaver.armor,0)),this.auras.swarmguard&&this.auras.swarmguard.timer&&(this.target.armor=Math.max(this.target.armor-this.auras.swarmguard.stacks*this.auras.swarmguard.armor,0)),this.armorReduction=this.getArmorReduction()}updateDmgMod(){this.stats.dmgmod=this.base.dmgmod;for(let t in this.auras)this.auras[t].timer&&this.auras[t].mult_stats.dmgmod&&(this.stats.dmgmod*=1+this.auras[t].mult_stats.dmgmod/100)}getGlanceReduction(t){let s=this.target.defense-this.stats["skill_"+t.type],a=Math.min(1.3-.05*s,.91),e=Math.min(1.2-.03*s,.99);return this.weaponrng?Math.random()*(e-a)+a:avg(a,e)}getGlanceChance(t){return 10+2*(this.target.defense-Math.min(5*this.level,this.stats["skill_"+t.type]))}getMissChance(t){let s=this.target.defense-this.stats["skill_"+t.type],a=5+(s>10?.2*s:.1*s);return a-=s>10?this.stats.hit-1:this.stats.hit}getDWMissChance(t){let s=this.target.defense-this.stats["skill_"+t.type],a=5+(s>10?.2*s:.1*s);return a=.8*a+20,a-=s>10?this.stats.hit-1:this.stats.hit}getCritChance(){let t=this.stats.crit+(this.talents.crit||0)+1*(this.level-this.target.level)+.6*(this.level-this.target.level);return Math.max(t,0)}getDodgeChance(t){return 5+.1*(this.target.defense-this.stats["skill_"+t.type])}getArmorReduction(){let t=this.target.armor/(this.target.armor+400+85*this.level);return t>.75?.75:t}addRage(t,s,a,e){e?s!=RESULT.MISS&&s!=RESULT.DODGE||(this.rage+=e.refund?.8*e.cost:0):s==RESULT.DODGE?this.rage+=a.avgdmg()/230.6*7.5*.75:s!=RESULT.MISS&&(this.rage+=t/230.6*7.5),this.rage>100&&(this.rage=100)}steptimer(t){return this.timer<=t?(this.timer=0,!0):(this.timer-=t,!1)}stepitemtimer(t){return this.itemtimer<=t?(this.itemtimer=0,!0):(this.itemtimer-=t,!1)}stepdodgetimer(t){this.dodgetimer<=t?this.dodgetimer=0:this.dodgetimer-=t}stepauras(){this.auras.slayer&&this.auras.slayer.firstuse&&this.auras.slayer.timer&&this.auras.slayer.step(),this.auras.spider&&this.auras.spider.firstuse&&this.auras.spider.timer&&this.auras.spider.step(),this.auras.bloodlustbrooch&&this.auras.bloodlustbrooch.firstuse&&this.auras.bloodlustbrooch.timer&&this.auras.bloodlustbrooch.step(),this.auras.pummeler&&this.auras.pummeler.firstuse&&this.auras.pummeler.timer&&this.auras.pummeler.step(),this.auras.swarmguard&&this.auras.swarmguard.firstuse&&this.auras.swarmguard.timer&&this.auras.swarmguard.step(),this.auras.LacerateDOT&&this.auras.LacerateDOT.timer&&this.auras.LacerateDOT.step()}endauras(){this.auras.slayer&&this.auras.slayer.firstuse&&this.auras.slayer.timer&&this.auras.slayer.end(),this.auras.spider&&this.auras.spider.firstuse&&this.auras.spider.timer&&this.auras.spider.end(),this.auras.bloodlustbrooch&&this.auras.bloodlustbrooch.firstuse&&this.auras.bloodlustbrooch.timer&&this.auras.bloodlustbrooch.end(),this.auras.pummeler&&this.auras.pummeler.firstuse&&this.auras.pummeler.timer&&this.auras.pummeler.end(),this.auras.swarmguard&&this.auras.swarmguard.firstuse&&this.auras.swarmguard.timer&&this.auras.swarmguard.end(),this.auras.flurry&&this.auras.flurry.timer&&this.auras.flurry.end(),this.auras.LacerateDOT&&this.auras.LacerateDOT.timer&&this.auras.LacerateDOT.end()}rollweapon(t){let s=0,a=rng10k();return a<(s+=100*Math.max(this.nextswinghs?t.miss:t.dwmiss,0))?RESULT.MISS:a<(s+=100*t.dodge)?RESULT.DODGE:a<(s+=100*t.glanceChance)?RESULT.GLANCE:a<(s+=100*(this.crit+t.crit))?RESULT.CRIT:RESULT.HIT}rollspell(t){let s=0,a=rng10k();return a<(s+=100*Math.max(this.mh.miss,0))?RESULT.MISS:t.canDodge&&a<(s+=100*this.mh.dodge)?RESULT.DODGE:(t.weaponspell||(a=rng10k(),s=0),a<(s+=100*(this.crit+this.mh.crit))&&!t.nocrit?RESULT.CRIT:RESULT.HIT)}attackmh(t){this.stepauras();let s,a=null,e=0;this.nextswinghs?(this.nextswinghs=!1,this.spells.maul&&this.spells.maul.cost<=this.rage?(s=this.rollspell(this.spells.maul),a=this.spells.maul,this.rage-=a.cost):s=this.rollweapon(t)):s=this.rollweapon(t);let i=t.dmg(a);e=this.procattack(a,t,s),s==RESULT.DODGE&&(this.dodgetimer=5e3),s==RESULT.GLANCE&&(i*=this.getGlanceReduction(t)),s==RESULT.CRIT&&(i*=2+(a?this.talents.abilitiescrit:0),this.proccrit()),t.use();let r=this.dealdamage(i,s,t,a);return a?(a.totaldmg+=r,a.data[s]++):(t.totaldmg+=r,t.data[s]++),t.totalprocdmg+=e,r+e}attackoh(t){this.stepauras();let s,a=0;s=this.rollweapon(t);let e=t.dmg();a=this.procattack(null,t,s),s==RESULT.DODGE&&(this.dodgetimer=5e3),s==RESULT.GLANCE&&(e*=this.getGlanceReduction(t)),s==RESULT.CRIT&&(e*=2,this.proccrit()),t.use();let i=this.dealdamage(e,s,t);return t.data[s]++,t.totaldmg+=i,t.totalprocdmg+=a,i+a}cast(t){if(this.stepauras(),t.use(),t.useonly)return 0;let s=0,a=t.dmg()*this.mh.modifier,e=this.rollspell(t);s=this.procattack(t,this.mh,e),e==RESULT.DODGE&&(this.dodgetimer=5e3),e==RESULT.CRIT&&(a*=2+this.talents.abilitiescrit,this.proccrit());let i=this.dealdamage(a,e,this.mh,t);return t.data[e]++,t.totaldmg+=i,this.mh.totalprocdmg+=s,i+s}dealdamage(t,s,a,e){return s!=RESULT.MISS&&s!=RESULT.DODGE?(t*=this.stats.dmgmod,t*=1-this.armorReduction,this.addRage(t,s,a,e),~~t):(this.addRage(t,s,a,e),0)}proccrit(){this.auras.flurry&&this.auras.flurry.use(),this.auras.deepwounds&&this.auras.deepwounds.use()}procattack(t,s,a){let e=0;return a!=RESULT.MISS&&a!=RESULT.DODGE&&(s.proc1&&rng10k()<s.proc1.chance&&(!s.proc1.spell||s.proc1.gcd&&this.timer&&this.timer<1500||s.proc1.spell.use(),s.proc1.magicdmg&&(e+=this.magicproc(s.proc1)),s.proc1.physdmg&&(e+=this.physproc(s.proc1.physdmg)),s.proc1.extra&&(this.extraattacks+=s.proc1.extra)),s.proc2&&rng10k()<s.proc2.chance&&(s.proc2.spell&&s.proc2.spell.use(),s.proc2.magicdmg&&(e+=this.magicproc(s.proc2))),this.trinketproc1&&rng10k()<this.trinketproc1.chance&&(this.trinketproc1.extra&&(this.batchedextras+=this.trinketproc1.extra),this.trinketproc1.magicdmg&&(e+=this.magicproc(this.trinketproc1)),this.trinketproc1.spell&&this.trinketproc1.spell.use()),this.trinketproc2&&rng10k()<this.trinketproc2.chance&&(this.trinketproc2.extra&&(this.batchedextras+=this.trinketproc2.extra),this.trinketproc2.magicdmg&&(e+=this.magicproc(this.trinketproc2)),this.trinketproc2.spell&&this.trinketproc2.spell.use()),this.attackproc&&rng10k()<this.attackproc.chance&&(this.attackproc.magicdmg&&(e+=this.magicproc(this.attackproc)),this.attackproc.spell&&this.attackproc.spell.use()),this.talents.swordproc&&s.type==WEAPONTYPE.SWORD&&rng10k()<100*this.talents.swordproc&&this.extraattacks++,this.auras.swarmguard&&this.auras.swarmguard.timer&&rng10k()<this.auras.swarmguard.chance&&this.auras.swarmguard.proc(),this.auras.zandalarian&&this.auras.zandalarian.timer&&this.auras.zandalarian.proc(),this.dragonbreath&&rng10k()<400&&(e+=this.magicproc({magicdmg:60,coeff:1}))),(!t||t instanceof Maul)&&this.auras.flurry&&this.auras.flurry.stacks&&this.auras.flurry.proc(),e}magicproc(t){let s=1,a=1700,e=t.magicdmg;return t.binaryspell?a=this.target.binaryresist:s*=this.target.mitigation,rng10k()<a?0:(rng10k()<100*this.stats.spellcrit&&(s*=1.5),t.coeff&&(e+=this.spelldamage*t.coeff),~~(e*s))}physproc(t){let s=0,a=rng10k();return a<(s+=100*Math.max(this.mh.miss,0))&&(t=0),a<(s+=100*this.mh.dodge)&&(this.dodgetimer=5e3,t=0),(a=rng10k())<100*(this.crit+this.mh.crit)&&(t*=2),t*this.stats.dmgmod*this.mh.modifier}serializeStats(){return{auras:this.auras,spells:this.spells,mh:this.mh,oh:this.oh}}log(t){console.log(`${step.toString().padStart(5," ")} | ${this.rage.toFixed(2).padStart(6," ")} | ${t}`)}}